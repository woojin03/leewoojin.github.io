

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://woojin03.github.io//</id>
  <title>woojin</title>
  <subtitle>디지털 포렌식과 모의해킹을 중심으로, 보안 분야의 다양한 경험을 차곡차곡 쌓아가는 블로그입니다.</subtitle>
  <updated>2025-05-04T21:34:13+09:00</updated>
  <author>
    <name>woojin</name>
    <uri>https://woojin03.github.io//</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://woojin03.github.io//feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="https://woojin03.github.io//"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 woojin </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>모의해킹 스터디 5주차 CTF 문제 분석 및 구현</title>
    <link href="https://woojin03.github.io//posts/Penetration-Test-Study-5(2)/" rel="alternate" type="text/html" title="모의해킹 스터디 5주차 CTF 문제 분석 및 구현" />
    <published>2025-05-03T00:00:00+09:00</published>
  
    <updated>2025-05-03T00:00:00+09:00</updated>
  
    <id>https://woojin03.github.io//posts/Penetration-Test-Study-5(2)/</id>
    <content type="text/html" src="https://woojin03.github.io//posts/Penetration-Test-Study-5(2)/" />
    <author>
      <name>leewoojin</name>
    </author>

  
    
    <category term="Pentest" />
    
    <category term="W5" />
    
  

  <summary>⚠️ 본 실습 콘텐츠는 노말틱님의 해킹 스터디 CTF 문제를 기반으로 재구성하였으며, 학습 및 교육 목적에 한해 사용됩니다.   이번 글에서는 해당 문제를 분석하고, 동일한 취약점을 기반으로 문제를 직접 구현해봄으로써,  SQL Injection이 로그인 로직에 어떻게 적용되고 동작하는지를 내부 구조 수준에서 심층적으로 이해하고자 합니다.    메인 페이지  1~3주차 학습 내용을 기반으로, ChatGPT와 함께 CTF 메인 화면을 구현해봤습니다.       🔐 Login Bypass 1  이 문제에서는 OR 허용, 주석 차단, 그리고 식별/인증을 동시에 만족시키는 조건을 우회하는 문제입니다.  ✅  로그인 로직  이번 문제의 로그인 로직은 다음과 같이 구성되어 있습니다:  $sql = &amp;quot;SELECT ...</summary>

  </entry>

  
  <entry>
    <title>모의해킹 스터디 5주차 CTF 문제 풀기</title>
    <link href="https://woojin03.github.io//posts/Penetration-Test-Study-5(1)/" rel="alternate" type="text/html" title="모의해킹 스터디 5주차 CTF 문제 풀기" />
    <published>2025-05-03T00:00:00+09:00</published>
  
    <updated>2025-05-03T00:00:00+09:00</updated>
  
    <id>https://woojin03.github.io//posts/Penetration-Test-Study-5(1)/</id>
    <content type="text/html" src="https://woojin03.github.io//posts/Penetration-Test-Study-5(1)/" />
    <author>
      <name>leewoojin</name>
    </author>

  
    
    <category term="Pentest" />
    
    <category term="W5" />
    
  

  <summary>과제 1. 오늘 배운거 복습 하기 (로그인 우회, 세션 탈취 등) 2. 인증 우회 실습 문제 풀기 (라이트업) + 문제와 비슷한 환경 구성해보기    CTF Login Bypass 1  해당 페이지에 들어가 보면 일반 로그인 화면과 유사하게 생긴 것을 확인할 수 있습니다. 강의와 같이 다음과 같은 인젝션을 사용하여 로그인 우회가 가능했습니다      Login Bypass 2     왜 or은 실패했는데 #은 성공했는가?     🔎 SQL 쿼리 구조에 따른 차이  ✅ doldol&amp;#39; or &amp;#39;1&amp;#39;=&amp;#39;1 이 성공하는 경우  # 인증 / 식별이 분리해서 처리하는 쿼리 $sql = &amp;quot;SELECT * FROM users WHERE username = &amp;#39;$id&amp;#39;&amp;quot;;      이 구조에서는 사용자 존재 여부만 확인하...</summary>

  </entry>

  
  <entry>
    <title>모의해킹 스터디 4주차 게시판 만들기</title>
    <link href="https://woojin03.github.io//posts/Penetration-Test-Study-4week(board)/" rel="alternate" type="text/html" title="모의해킹 스터디 4주차 게시판 만들기" />
    <published>2025-04-30T00:00:00+09:00</published>
  
    <updated>2025-04-30T00:00:00+09:00</updated>
  
    <id>https://woojin03.github.io//posts/Penetration-Test-Study-4week(board)/</id>
    <content type="text/html" src="https://woojin03.github.io//posts/Penetration-Test-Study-4week(board)/" />
    <author>
      <name>leewoojin</name>
    </author>

  
    
    <category term="Pentest" />
    
    <category term="W4" />
    
  

  <summary>이번 주차에서는 1~3주차 동안 구현한 웹페이지에 게시판 기능을 추가해보겠습니다.  1.유저 게시판 테이블 설계  CREATE TABLE user_board (   id INT AUTO_INCREMENT PRIMARY KEY,   title VARCHAR(255) NOT NULL,   content TEXT NOT NULL,   author VARCHAR(50) NOT NULL,   created_at DATETIME DEFAULT CURRENT_TIMESTAMP,   views INT DEFAULT 0 );    2. 게시판 목록    &amp;amp;lt;table class=&amp;quot;table table-hover text-center&amp;quot;&amp;amp;gt;   &amp;amp;lt;thead class=&amp;quot;table-light&amp;quot;&amp;amp;gt;     &amp;amp;...</summary>

  </entry>

  
  <entry>
    <title>GitHub Pages와 Jekyll로 깃허브 블로그 작성 방법</title>
    <link href="https://woojin03.github.io//posts/github-blog-start/" rel="alternate" type="text/html" title="GitHub Pages와 Jekyll로 깃허브 블로그 작성 방법" />
    <published>2025-04-29T20:00:00+09:00</published>
  
    <updated>2025-04-29T20:00:00+09:00</updated>
  
    <id>https://woojin03.github.io//posts/github-blog-start/</id>
    <content type="text/html" src="https://woojin03.github.io//posts/github-blog-start/" />
    <author>
      <name>leewoojin</name>
    </author>

  
    
    <category term="Blogging" />
    
    <category term="Tutorial" />
    
  

  <summary>성실함을 기록으로 보여주기 위해, 기존에 사용하던 네이버 블로그를 정리하고 GitHub 블로그로 이전했습니다. 잔디 심기를 통해 하루하루의 노력을 쌓아가는 모습을 남기고자 합니다.  처음 구축하는 과정에서 쥔장이 직접 많이 헤맸던 부분들만 간단하게 정리해두었습니다.    1. 테마를 GitHub Fork 기능으로 가져옵니다.     GitHub에서 원하는 테마(저는 Chirpy)를 찾아 Fork 버튼을 누릅니다.   내 계정에 username.github.io 형식의 저장소를 새로 만듭니다.   (주의: 저장소 이름이 반드시 username.github.io 형태여야 합니다.)    2. 저장소를 로컬로 복제합니다.  git clone https://github.com/내아이디/내아이디.github.i...</summary>

  </entry>

</feed>


